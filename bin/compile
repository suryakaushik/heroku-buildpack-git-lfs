#!/bin/bash

# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR

set -e
set -o pipefail

build_dir="$1"
env_dir="$3"

function die {
    echo "$@" >&2
    exit 1
}

function indent {
    sed -u 's/^/       /'
}

if [[ -f "$env_dir/BL_BUILDPACK_GIT_LFS_REPO" ]]; then
    repo="$(< "$env_dir/BL_BUILDPACK_GIT_LFS_REPO")"
else
    die "Env var BL_BUILDPACK_GIT_LFS_REPO is not set"
fi

if [[ -f "$env_dir/BL_BUILDPACK_GIT_LFS_SSH_PRIVATE_KEY" ]]; then
    ssh_key="$(< "$env_dir/BL_BUILDPACK_GIT_LFS_SSH_PRIVATE_KEY")"
else
    die "Env var BL_BUILDPACK_GIT_LFS_SSH_PRIVATE_KEY is not set"
fi

git_user="${repo%@*}"
git_host="${repo#*@}"
git_host="${git_host%:*}"

echo "-----> Download Git LFS assets"
(
    pushd "$build_dir"

    mkdir -p /app/.ssh
    chmod 700 /app/.ssh
    echo "${ssh_key}" | base64 --decode > /app/.ssh/id_rsa

    echo -e "Host ${git_host}\n"\
          " User ${git_user}\n"\
          " IdentityFile /app/.ssh/id_rsa\n"\
          " IdentitiesOnly yes\n"\
          " UserKnownHostsFile=/dev/null\n"\
          " StrictHostKeyChecking no"\
          > /app/.ssh/config

    git version

    git init
    git remote add origin "$repo"
    git fetch origin
    git reset --mixed "$SOURCE_VERSION"
    git lfs install
    git lfs pull
    rm -rf .git
) | indent